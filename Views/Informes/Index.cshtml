@{
    ViewBag.Title = "Informe de Ventas por Fecha";
}
<head>

<style>
    /* Colores personalizados para el <select> */
    .modo-diario {
        background-color: #f8f9fa; /* table-light */
    }

    .modo-mensual {
        background-color: #fff3cd; /* table-warning */
    }

    .modo-anual {
        background-color: #d1e7dd; /* table-success */
    }

    .mensaje-error-fechas {
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #f8d7da;
    color: #842029;
    padding: 6px 12px;
    border-radius: 6px;
    font-weight: 500;
    font-size: 0.9rem;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    opacity: 0;
    transition: opacity 0.5s ease;
    z-index: 10;
}

</style>


</head>
<div class="container mt-5">
    <div class="card shadow-lg p-4 rounded-4">
        <h2 class="text-center text-primary mb-4">📊 Informe de Ventas</h2>

        <form id="formFechas" class="row g-3 align-items-end justify-content-center mb-4">
            <div class="col-auto">
                <label for="fechaDesde" class="form-label fw-bold">Desde:</label>
                <input type="date" id="fechaDesde" name="fechaDesde" required class="form-control" />
            </div>
            <div class="col-auto">
                <label for="fechaHasta" class="form-label fw-bold">Hasta:</label>
                <input type="date" id="fechaHasta" name="fechaHasta" required class="form-control" />
            </div>
            <div class="col-auto">
                <label for="modo" class="form-label fw-bold">Agrupar por:</label>
                <select id="modo" name="modo" class="form-select" required>
                    <option value="diario">Diario</option>
                    <option value="mensual">Mensual</option>
                    <option value="anual">Anual</option>
                </select>
            </div>
            
        </form>
        <div id="mensajeErrorFechas" class="mensaje-error-fechas text-danger small fw-semibold" style="opacity: 0; transition: opacity 0.5s;"></div>


        <div class="table-responsive">
            <table class="table table-hover table-bordered align-middle text-center w-auto mx-auto" id="tablaVentas">
                <thead class="table-dark">
                    <tr>
                        <th style="width: 150px;">🗓 Fecha</th>
                        <th style="width: 180px;">💵 Total Vendido</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Se llena con JavaScript -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
   
document.getElementById('modo').addEventListener('change', function () {
    document.getElementById('formFechas').dispatchEvent(new Event('submit'));
});

document.getElementById('fechaDesde').addEventListener('change', function () {
    document.getElementById('formFechas').dispatchEvent(new Event('submit'));
});

document.getElementById('fechaHasta').addEventListener('change', function () {
    document.getElementById('formFechas').dispatchEvent(new Event('submit'));
});


const modoSelect = document.getElementById("modo");

    function actualizarColorModo() {
        // Quitamos clases anteriores
        modoSelect.classList.remove("modo-diario", "modo-mensual", "modo-anual");

        // Agregamos la clase correspondiente
        const valor = modoSelect.value;
        if (valor === "diario") modoSelect.classList.add("modo-diario");
        else if (valor === "mensual") modoSelect.classList.add("modo-mensual");
        else if (valor === "anual") modoSelect.classList.add("modo-anual");
    }

    // Cambiar color al cargar y al cambiar el valor
    actualizarColorModo();
    modoSelect.addEventListener("change", actualizarColorModo);


    document.getElementById("formFechas").addEventListener("submit", function (e) {
    e.preventDefault();

    const desde = document.getElementById("fechaDesde").value;
    const hasta = document.getElementById("fechaHasta").value;
    const modo = document.getElementById("modo").value;
    const mensajeError = document.getElementById("mensajeErrorFechas");

    // Limpiamos mensajes anteriores y mostramos el div por si estaba oculto
    mensajeError.textContent = "";
    mensajeError.style.opacity = "1";

    // Validación de fechas
    if (new Date(hasta) < new Date(desde)) {
        mensajeError.textContent = "⚠️ La fecha final no puede ser anterior a la fecha de inicio.";

        // Ocultar luego de 5 segundos
        setTimeout(() => {
            mensajeError.style.opacity = "0";
        }, 5000);

        return;
    }

    const params = new URLSearchParams();
    params.append("desde", desde);
    params.append("hasta", hasta);
    params.append("modo", modo);

    fetch("/Informes/ObtenerVentasPorFecha", {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: params
    })
    .then(response => {
        if (!response.ok) throw new Error("Error al consultar el servidor.");
        return response.json();
    })
    .then(data => {
        const tbody = document.querySelector("#tablaVentas tbody");
        tbody.innerHTML = "";

        if (data.length === 0) {
            tbody.innerHTML = `<tr><td colspan="2">No hay datos en ese período.</td></tr>`;
            return;
        }

        let totalGeneral = 0;
        let rowClass = "";

        switch (modo) {
            case "diario":
                rowClass = "table-light";
                break;
            case "mensual":
                rowClass = "table-warning";
                break;
            case "anual":
                rowClass = "table-success";
                break;
        }

        data.forEach(item => {
            const fecha = new Date(item.fecha).toLocaleDateString('es-AR');
            const total = parseFloat(item.totalVendido);
            totalGeneral += total;

            const fila = `
                <tr class="${rowClass}">
                    <td>${fecha}</td>
                    <td class="text-end fw-semibold">$ ${total.toFixed(2)}</td>
                </tr>`;
            tbody.innerHTML += fila;
        });

        const filaTotal = `
            <tr class="table-dark fw-bold">
                <td>Total</td>
                <td class="text-end">$ ${totalGeneral.toFixed(2)}</td>
            </tr>`;
        tbody.innerHTML += filaTotal;
    })
    .catch(error => {
        mensajeError.textContent = "Ocurrió un error: " + error.message;
        setTimeout(() => {
            mensajeError.style.opacity = "0";
        }, 5000);
    });
});







</script>
